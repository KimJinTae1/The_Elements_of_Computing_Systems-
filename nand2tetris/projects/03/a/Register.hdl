// This file is part of www.nand2tetris.org
// and the book "The Elements of Computing Systems"
// by Nisan and Schocken, MIT Press.
// File name: projects/03/a/Register.hdl

/**
 * 16-bit register:
 * If load[t] == 1 then out[t+1] = in[t]
 * else out does not change
 */

CHIP Register {
    IN in[16], load;
    OUT out[16];

    PARTS:
    // Put your code here:
    Mux(a=out0, b=in[0], sel=load, out=data0);
DFF(in=data0, out=out0, out=out[0]);

Mux(a=out1, b=in[1], sel=load, out=data1);
DFF(in=data1, out=out1, out=out[1]);

Mux(a=out2, b=in[2], sel=load, out=data2);
DFF(in=data2, out=out2, out=out[2]);

Mux(a=out3, b=in[3], sel=load, out=data3);
DFF(in=data3, out=out3, out=out[3]);

Mux(a=out4, b=in[4], sel=load, out=data4);
DFF(in=data4, out=out4, out=out[4]);

Mux(a=out5, b=in[5], sel=load, out=data5);
DFF(in=data5, out=out5, out=out[5]);

Mux(a=out6, b=in[6], sel=load, out=data6);
DFF(in=data6, out=out6, out=out[6]);

Mux(a=out7, b=in[7], sel=load, out=data7);
DFF(in=data7, out=out7, out=out[7]);

Mux(a=out8, b=in[8], sel=load, out=data8);
DFF(in=data8, out=out8, out=out[8]);

Mux(a=out9, b=in[9], sel=load, out=data9);
DFF(in=data9, out=out9, out=out[9]);

Mux(a=out10, b=in[10], sel=load, out=data10);
DFF(in=data10, out=out10, out=out[10]);

Mux(a=out11, b=in[11], sel=load, out=data11);
DFF(in=data11, out=out11, out=out[11]);

Mux(a=out12, b=in[12], sel=load, out=data12);
DFF(in=data12, out=out12, out=out[12]);

Mux(a=out13, b=in[13], sel=load, out=data13);
DFF(in=data13, out=out13, out=out[13]);

Mux(a=out14, b=in[14], sel=load, out=data14);
DFF(in=data14, out=out14, out=out[14]);

Mux(a=out15, b=in[15], sel=load, out=data15);
DFF(in=data15, out=out15, out=out[15]);


    
}
